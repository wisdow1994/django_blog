"""
Django settings for django_flasky project.

Generated by 'django-admin startproject' using Django 1.11.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=bfh($_@umiveb4il#n9!5*#6drxr&0+u6$3t66la3(*xd3#br'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app',
    # 'django_jinja',  # 友好的jinja2集成,可以使用url和static等过滤器和标签
    'bootstrap3',  # 集成bootstrap3前端框架
    'dj_pagination',  # 分页的扩展
    'tinymce',  # 富文本支持
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'app.middleware.SimpleMiddleware',
    'dj_pagination.middleware.PaginationMiddleware',  # 分页的中间件
]

ROOT_URLCONF = 'django_flasky.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 'app.views.global_settings',
                # 让setting中的变量模板全局使用
            ],
        },
    },
]

WSGI_APPLICATION = 'django_flasky.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LOGIN_URL = 'auth/login/'

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

# STATIC_FILES = [
#     os.path.join(BASE_DIR, 'static'),
# ]

TINYMCE_DEFAULT_CONFIG = {
    'theme': 'advanced',
    'width': 600,  # admin富文本编辑器的设置
    'height': 400,
}

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

AUTHENTICATION_BACKENDS = (
    # 'django.contrib.auth.backends.ModelBackend',
    'app.Backend.CustomBackend',
    # 自定义的验证,支持邮箱或者用户名登陆
)

AUTH_USER_MODEL = 'app.User'  # 替换为自定义的User模型


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = '你的邮箱'
EMAIL_HOST_PASSWORD = '密码'
# 网易邮箱第三方使用的是授权码,而不是密码
EMAIL_USE_SSL = True  # 传输协议
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

'''
# 发送的是txt文本
from django.core.mail import send_mail
send_mail('Subject here', 'Here is the message.', '你的.com',
    ['接受者.com'], fail_silently=False)
    
from django.conf import settings
from django.core.mail import EmailMultiAlternatives
 
from_email = settings.DEFAULT_FROM_EMAIL
# subject 主题 content 内容 to_addr 是一个列表，发送给哪些人
msg = EmailMultiAlternatives(subject, content, from_email, [to_addr])
 
msg.content_subtype = "html"
 
# 添加附件（可选）
msg.attach_file('./twz.pdf')
 
# 发送
msg.send()    
    '''